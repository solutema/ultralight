<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA7JJREFUWEftlktP
        U2kYx9WZURMnGZ1kYuJazWRmMzFG4xcYw0eADStucknYuyCZdAGaCSFRFuyIIbOAPSoiLW2xLQfoHXo/
        tEhr6ekNBUrL3+d5wyGlFwIeOiub/NrTc97zvP/zXM+FC98/dTwwPDw8Ojg4WCKgkRLbOrOjh4aGSjs7
        OzgP2NaZBfBT8+bhcFgTbINtaRJgMBhwVlThmgXEYjGchmg0ilpoFpBIJGCz2U7EarWikng8DkazAEVR
        cBKpVAonoVlAPp+Hy+Wqwul04iRyuRwYzQJ2d3dRyVlLU1MVlEolBAKBI/x+P8pJJpMoFot10eyBdDoN
        JpPJHJHNZqGiupp/OVwq29vbYDQJ4E28Xq9gdXX1iLW1Naj4fD6olHtG9RrbOHUIOjs7H3R3d291dHSI
        m0KhkGhA8/PzxzAajSjHZDKhHLPZDBVuSGyLbZLteFtb2581u2Jvb++V/v7+GMd0f39f3DQ9PY3Jyclj
        TE1NVZ0rX1N+nY/Zhk6nEyGTZRl9fX2+gYGBH6tE0IUBSZIKvDkzNjaG8fHxc2FkZASbm5uiX+j1+kJX
        V9fTKgE9PT1pzviDg4NTwWu/Ba6YJ0+6tqsEcIz4YiwqIxH/CGlxER63E/HNDXzcYGLYiEWJdbEmui5j
        nVwqyxHIkTARQoRyJhwKIhQMIhgMIBjwI+CnJKWklSQbLB8WUCgURD7UFLC3tweX045cNg2LZYGGi4xs
        Jn2IgmxaQeaIFB2nkFYq2YKSKicJZStJSWzA2zevRZnWFfDly2c8f/5MGOAnTn5KYIfOaYXt6XT/CAGc
        B3UF5PM5TEy84nJBe3v7Mah88K1QzDE6+kIIiFMy1hWQIXf7fF5qMh5qPm54PE643Q4aOnY4HMuwryxh
        eVnC0pKNcsRKI9oCK4XK8sGMhQUTzCYjTEbuG3oY9HOYm5vF+9l3mH03g5mZN0LAOuVOXQGKstVwAQFK
        zLoCkslEwwV4PZ76AuJUfo0Ogd2+UlPAZepOe37/mii9aJRqm+o7wrUdobqm2g4G/VTXPhrFPHxWqbZ5
        QPGgcsPrcVGu8EuLU5Sxw2EHb7TCObNEOSNJog8s0qvdvEEPmjlF6gO/Epe4H/DXb62trf/SBaGukfAe
        zc3NY7TnbeIGC/iBuEn88fjx3y9bWlr2aQEvagTFpqam/2ivR8Rd4he1I16lg1vE78Q94uHhIl54Xtwn
        Ww+Iv4g7xHXiYmVL/olOXDt0DbvnPOGn/Zm4UmvjSiH/2/+voS9eEYwb3c4AAAAASUVORK5CYII=
</value>
  </data>
</root>