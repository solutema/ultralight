<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctExclamation.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMAAxAIYAAAAAAP///+0gOu0hPO0iPe4jPu4lQO4lQe80TvBCWvFRZ/RugPV8jfaLmveZpvio
        s/rFzO8rSO8sSfAtSvAuS/NfdPm2wPzT2f3i5v7w8vNHZvNIZ/RKafVScfdujPhzkPh8mPh9mfh+mvmF
        oPmHovmLpfmNp/qSq/qftvuswPy+zvy/z/zA0PzB0fzH1eXn6tLW2+nt8snV48jS3dHW29jc4PDx8urt
        79bb3sLBveHg3drX0dTRy8vJxePi4NXRytHNxtXQyOLd1dTQyubi3Li2s9nTy9DLxOjj3N/a09LNx+fi
        3NzX0dHNyNfTztjSy9nTzdfRy+fi3eDb1uvm4ejk4M/Myc3Kx8zKyMTCwLi2tK2rqb25trezsLayr8/L
        yM7Kx+fj4Kypp7i1s+Lf3efi37a0s6empgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEBAAAh+QQA
        AAAAACwAAAAAMAAxAAAI/wCNBGGyRMqSgwgTKlzIsOESIkimDIkiUIgNFypYaNzIsaPHjyBZrGgRg0yP
        J0lufKAQYYLLlzBjypxJc4KECB1kfGlCBYUAAgWCCh1KtKjRo0IJCBjhJEeVEgMOSJ1KtarVq1ipGiAA
        woqWMiYIGMhKtmzWrSHAFAEr1qzbt2jVsh379kCFAHjzWqi7VcSVMXPr2s2btwFfAn4Bh6X79i7hABUO
        Jw5c1zFhwX3/Um78GAJmxJoXC27w2MHnyaLrkia84HTotqofJ3CtGPbb1XgxCD6QuTZjt7gD7KW9GThh
        w8RT3yasYHfv4maD7+YN2rdgC3k9O68OvSyEwtOfK/93+x1v6+2obZPPiyA89/Fmy1+YTj397/h4H9AX
        rx5/AAb7vdefd3g15559gmEQQAb01ffafWXhpd2BDzYYIIIWoldhhskNeBUCjzFIoXVmWSbhhRuWFVwA
        po3Y3VUOPIachiQSSFhkLsKHVQaPtZejhxyeJSCEQQqJYZFm8UckklbFNUYYUDHplgEDgPCFFlWkMMAA
        BHTp5ZdghinmmF4OIMAJTWixwwskcKDBBnDGKeecdNZpZ5wezCBGFj9goUMNNMAg6KCEFmrooYjCQAMO
        PohxhhNPKJEDF114YemlmGaq6aacXrqFGTxAYcQTUQBxxKmopqrqqqy2mqoSohoCERAAOw==
</value>
  </data>
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>