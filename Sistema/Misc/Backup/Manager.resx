<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>