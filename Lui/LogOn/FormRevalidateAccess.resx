<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>